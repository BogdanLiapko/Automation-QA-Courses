{
	"info": {
		"_postman_id": "06b848a3-a324-452a-9cdf-b31ee4912f57",
		"name": "lesson12-API",
		"description": "Postman collection for testing endpoints of the Official Joke API (local version).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18088113"
	},
	"item": [
		{
			"name": "GET /random_joke",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Response is JSON', function () {",
							"    pm.response.to.be.json;",
							"});",
							"pm.test('Has setup and punchline', function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res).to.have.property('setup');",
							"    pm.expect(res).to.have.property('punchline');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/random_joke",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"random_joke"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /random_ten",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Returns array of jokes', function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res).to.be.an('array');",
							"    pm.expect(res.length).to.be.above(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/random_ten",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"random_ten"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /jokes/programming/random",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status 200 and programming joke', function () {",
							"    pm.response.to.have.status(200);",
							"    const res = pm.response.json();",
							"    pm.expect(res[0].type).to.eql('programming');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/jokes/programming/random",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"jokes",
						"programming",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /jokes/general/random",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status 200 and general joke', function () {",
							"    pm.response.to.have.status(200);",
							"    const res = pm.response.json();",
							"    pm.expect(res[0].type).to.eql('general');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/jokes/general/random",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"jokes",
						"general",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /jokes/knock-knock/random",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status 200 and knock-knock joke', function () {",
							"    pm.response.to.have.status(200);",
							"    const res = pm.response.json();",
							"    pm.expect(res[0].type).to.eql('knock-knock');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/jokes/knock-knock/random",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"jokes",
						"knock-knock",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /jokes/programming/ten",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Programming jokes array', function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/jokes/programming/ten",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"jokes",
						"programming",
						"ten"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /jokes/general/ten",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('General jokes array', function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/jokes/general/ten",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"jokes",
						"general",
						"ten"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /jokes/knock-knock/ten",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Knock-knock jokes array', function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/jokes/knock-knock/ten",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"jokes",
						"knock-knock",
						"ten"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /bad_route (404 test)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Returns 404 for invalid route', function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/bad_route",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"bad_route"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /jokes/random (alias test)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status is 200 and response is JSON', function () {",
							"    pm.response.to.have.status(200);",
							"    const res = pm.response.json();",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/jokes/random",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"jokes",
						"random"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000"
		}
	]
}